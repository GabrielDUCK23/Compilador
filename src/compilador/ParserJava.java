
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Sep 27 21:10:31 CDT 2023
//----------------------------------------------------

package compilador;

import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Sep 27 21:10:31 CDT 2023
  */
public class ParserJava extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public ParserJava() {super();}

  /** Constructor which sets the default scanner. */
  public ParserJava(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserJava(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\024\000\002\002\004\000\002\002\003\000\002\002" +
    "\004\000\002\002\003\000\002\012\005\000\002\013\003" +
    "\000\002\013\005\000\002\015\007\000\002\015\011\000" +
    "\002\015\011\000\002\015\011\000\002\015\011\000\002" +
    "\015\007\000\002\015\007\000\002\003\003\000\002\003" +
    "\003\000\002\003\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\045\000\012\073\004\102\005\124\006\127\011\001" +
    "\002\000\004\142\ufff1\001\002\000\004\142\ufff3\001\002" +
    "\000\004\142\ufff2\001\002\000\004\002\047\001\002\000" +
    "\004\002\ufffe\001\002\000\004\142\043\001\002\000\004" +
    "\142\015\001\002\000\014\002\000\073\004\102\005\124" +
    "\006\127\011\001\002\000\004\002\uffff\001\002\000\006" +
    "\006\016\045\017\001\002\000\010\053\027\145\026\147" +
    "\025\001\002\000\006\011\021\143\020\001\002\000\004" +
    "\020\023\001\002\000\004\020\022\001\002\000\014\002" +
    "\ufff5\073\ufff5\102\ufff5\124\ufff5\127\ufff5\001\002\000\014" +
    "\002\ufff4\073\ufff4\102\ufff4\124\ufff4\127\ufff4\001\002\000" +
    "\006\020\031\045\030\001\002\000\006\020\ufff0\045\ufff0" +
    "\001\002\000\006\020\uffef\045\uffef\001\002\000\006\020" +
    "\uffee\045\uffee\001\002\000\012\011\035\070\033\114\034" +
    "\143\032\001\002\000\014\002\ufffa\073\ufffa\102\ufffa\124" +
    "\ufffa\127\ufffa\001\002\000\004\020\041\001\002\000\004" +
    "\020\040\001\002\000\004\020\037\001\002\000\004\020" +
    "\036\001\002\000\014\002\ufff8\073\ufff8\102\ufff8\124\ufff8" +
    "\127\ufff8\001\002\000\014\002\ufff6\073\ufff6\102\ufff6\124" +
    "\ufff6\127\ufff6\001\002\000\014\002\ufff7\073\ufff7\102\ufff7" +
    "\124\ufff7\127\ufff7\001\002\000\014\002\ufff9\073\ufff9\102" +
    "\ufff9\124\ufff9\127\ufff9\001\002\000\004\020\046\001\002" +
    "\000\006\016\044\020\ufffc\001\002\000\004\142\043\001" +
    "\002\000\004\020\ufffb\001\002\000\004\002\ufffd\001\002" +
    "\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\045\000\012\002\006\003\011\012\007\015\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\013\041\001" +
    "\001\000\002\001\001\000\012\002\013\003\011\012\007" +
    "\015\012\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\023\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\013\044\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserJava$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserJava$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserJava$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$ParserJava$actions {
  private final ParserJava parser;

  /** Constructor */
  CUP$ParserJava$actions(ParserJava parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$ParserJava$do_action(
    int                        CUP$ParserJava$act_num,
    java_cup.runtime.lr_parser CUP$ParserJava$parser,
    java.util.Stack            CUP$ParserJava$stack,
    int                        CUP$ParserJava$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserJava$result;

      /* select the action based on the action number */
      switch (CUP$ParserJava$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Tipo ::= BOOLEAN 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("Tipo",4, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Tipo ::= NUMBER 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("Tipo",4, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Tipo ::= STRING 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("Tipo",4, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // PALABRACLAVE ::= VAR 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("PALABRACLAVE",1, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // PALABRACLAVE ::= LET 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("PALABRACLAVE",1, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // PALABRACLAVE ::= CONST 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("PALABRACLAVE",1, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER EQ INTEGER_LITERAL puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-4)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER EQ CADENA puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-4)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER Dospunto Tipo EQ FALSE puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-6)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER Dospunto Tipo EQ TRUE puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-6)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER Dospunto Tipo EQ CADENA puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-6)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER Dospunto Tipo EQ INTEGER_LITERAL puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-6)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // VariableDeclaracion ::= PALABRACLAVE IDENTIFIER Dospunto Tipo puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("VariableDeclaracion",11, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-4)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // package_name ::= IDENTIFIER punto package_name 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("package_name",9, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-2)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // package_name ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("package_name",9, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // package_declaration ::= PACKAGE package_name puntoYcoma 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("package_declaration",8, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-2)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Programa ::= package_declaration 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Programa ::= VariableDeclaracion Programa 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-1)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Programa ::= VariableDeclaracion 
            {
              Object RESULT =null;

              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          return CUP$ParserJava$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Programa EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-1)).value;
		RESULT = start_val;
              CUP$ParserJava$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserJava$stack.elementAt(CUP$ParserJava$top-1)), ((java_cup.runtime.Symbol)CUP$ParserJava$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserJava$parser.done_parsing();
          return CUP$ParserJava$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

