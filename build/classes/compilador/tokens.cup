package compilador;

import java_cup.runtime.*;

//parser code {:
    // Conectar este analizador sintáctico a un analizador léxico (scanner).
   // scanner s;
    //Parser(scanner s){ this.s=s; }
//:}

/* Definir cómo conectar con el analizador léxico. */
//init with {: s.init(); :};
//scan with {: return s.next_token(); :};

/* Terminales (tokens devueltos por el analizador léxico). */
terminal COMILLA_DOBLE, INT, Dospunto, corchete_open,COMILLA_SIMPLE,CADENA, corchete_close, llave_open, llave_close, SUMA, punto, COMILLA, puntoYcoma, MASIGUAL, scanner, MENOSIGUAL, PARENTHESIS_OPEN, PARENTHESIS_CLOSE, PORIGUAL, DIVISIONIGUAL, REQUIRE, PorcentajeIGUAL, INCREMENTO, DECREMENTO, COMPARAIUAL, MAYORQUE, MENORQUE, MENORIGUAL, MAYORIGUAL, AND, OR, NOT, EQEQ, EQ, PLUS, POR, DIVISION, PORCENTAJE, ABSTRACT, BOOLEAN, BREAK, IF, IMPORT, IN, INSTANCEOF, NEW, NULL, RETURN, SUPER, SWITCH, THIS, THROW, TRUE, TRY, TYPEOF, VAR, VOID, WHILE, WITCH, CASE, CATCH, CLASS, CONST, CONTINUE, DEBUGGER, DEFAULT, DELETE, DO, ELSE, ENUM, EXPORT, EXTENDS, FALSE, Comment, FINALLY, FOR, FUNCTION, AS, IMPLEMENTS, INTERFACE, LET, Menos, coma, PACKAGE, PRIVATE, PROTECTED, PUBLIC, STATIC, YIELD, ANY, CONSTRUCTOR, GET, MODULE, REQUIERE, IDENTIFIER, INTEGER_LITERAL, STRING_LITERAL, NUMBER, SET, STRING, SYMBOL, TYPE, FROM, OF, WITH, DECLARE, ERROR;


/* No terminales */
non terminal Programa,PALABRACLAVE,VariableDeclaracion2,DATADECLARATION,Tipo,DeclaraciónLista,Declaracion,expr,package_declaration,package_name,Declaración, VariableDeclaracion, FunciónDeclaración, ParámetroLista, Bloque, SentenciaLista,Sentencia,Expresión;
/* Definición de la gramática */


start with Programa;

Programa::= 
     VariableDeclaracion
    |  VariableDeclaracion Programa
    |  package_declaration;

package_declaration::= PACKAGE package_name puntoYcoma;

package_name::= IDENTIFIER | IDENTIFIER punto package_name;

VariableDeclaracion::=PALABRACLAVE IDENTIFIER Dospunto Tipo puntoYcoma
                     |PALABRACLAVE IDENTIFIER Dospunto Tipo EQ INTEGER_LITERAL puntoYcoma
                     |PALABRACLAVE IDENTIFIER Dospunto Tipo EQ CADENA puntoYcoma
                     |PALABRACLAVE IDENTIFIER Dospunto Tipo EQ TRUE puntoYcoma
                     |PALABRACLAVE IDENTIFIER Dospunto Tipo EQ FALSE puntoYcoma
                     |PALABRACLAVE IDENTIFIER EQ CADENA puntoYcoma
                     |PALABRACLAVE IDENTIFIER EQ INTEGER_LITERAL puntoYcoma;

PALABRACLAVE::= CONST|LET|VAR;


Tipo::=STRING|NUMBER|BOOLEAN;